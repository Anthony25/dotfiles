
# If not running interactively, don't do anything
[[ $- != *i* ]] && return


# Functions
# ####################
function mkdir_cd {
    mkdir $1 && cd $1;
}

function clean_cache {
    sync
    su -c "echo 3 > /proc/sys/vm/drop_caches"
}

function reptyr_authorization {
    ORIG_VALUE=`cat /proc/sys/kernel/yama/ptrace_scope`
    echo 0 | sudo tee /proc/sys/kernel/yama/ptrace_scope > /dev/null
    reptyr $@
    echo "$ORIG_VALUE" | sudo tee /proc/sys/kernel/yama/ptrace_scope > /dev/null
}

function search_note {
    python2 .vim/bundle/vim-notes/misc/notes/search-notes.py \
        -n ~/.vim/bundle/vim-notes/misc/notes/user/ \
        -d ~/.vim/bundle/vim-notes/misc/notes/index.pickle \
        -i $@
}

function custom_sudo {
    # Handles aliases and functions
    IS_ALIAS=`whence -w "$1" | grep ": alias$"`
    if [ -n "$IS_ALIAS" ]
    then EXPAND_CMD=`whence "$1" | awk '{print $1;}'`
            IS_FUNCTION=`whence -w "$EXPAND_CMD" | grep ": function$"`
            shift
            if [ -n "$IS_FUNCTION" ]
                then sudo $(ECHOONLY=true eval $EXPAND_CMD $@)
            else
                sudo $EXPAND_CMD $@
            fi
    else
        sudo $@
    fi
}

function nvim_or_vim {
    if $(where nvim > /dev/null)
        then if [ "$ECHOONLY" ]
            then echo "nvim $@"
        else
            nvim $@
        fi
    else
        if [ "$ECHOONLY" ]
            then echo "vim $@"
        else
            vim $@
        fi
    fi
}

# Alias
####################

# One-key aliases
alias e='exit'
alias g='git'
alias l='ls'
alias p='ping'
alias pg='ping 8.8.8.8'
alias pg6='ping6 2001:4860:4860::8888'
alias v='nvim_or_vim '
alias vn='nvim_or_vim note:notepad'
alias vim='nvim_or_vim '

alias cp='cp -r --reflink=auto'
alias free='free -h'
alias grep='grep --color'
alias ll='ls -alh'
alias ls='ls --color=auto'
alias maj='yaourt -Syua'
alias mkcd=mkdir_cd $1
alias private=' unset HISTFILE'
alias reptyr='reptyr_authorization ' # Set the kernel to authorize ptracing
alias sudo='custom_sudo' # Make aliases work with sudo


# HISTORIQUE
####################
HISTFILE=~/.histfile
HISTSIZE=1000
SAVEHIST=1000
setopt hist_ignore_all_dups
setopt sharehistory


# Other
####################

autoload -U colors && colors
# Allow extended regex
setopt extendedglob

zstyle ':completion:*' matcher-list 'm:{a-zA-Z}={A-Za-z}' 'r:|[._-]=* r:|=*' 'l:|=* r:|=*'
zstyle ":completion:*:commands" rehash 1 menu select
zstyle :compinstall filename '/home/anthony/.zshrc'

# Syntax highlighting
if [ -f /usr/share/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh ]
    then source /usr/share/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
fi

autoload -Uz compinit promptinit
compinit
promptinit

# Walter theme modified: username is green if normal user, red if root
# prompt walter
PROMPT="%B%(?..[%?] )%b%{%(#~$fg[red]~$fg[cyan])%}%n%{$reset_color%}%{$fg[green]%}@%U%m%u> %{$reset_color%}"
RPROMPT="%F{green}%~%f"

# Let the terminal set the TERM value, if it doesn't, set to xterm-256color
[[ $TMUX = ""  ]] && export TERM="xterm-256color"

export EDITOR=nvim
if [ -f ~/.dir_colors/dircolors ]
    then eval `dircolors ~/.dir_colors/dircolors`
fi

# Enable vim-mode
bindkey -v

HISTFILE=~/.histfile
HISTSIZE=1000
SAVEHIST=1000
setopt hist_ignore_space


# Special keys solution
####################

# setup key accordingly
[[ -n "${key[Home]}"    ]]  && bindkey  "${key[Home]}"    beginning-of-line
[[ -n "${key[End]}"     ]]  && bindkey  "${key[End]}"     end-of-line
[[ -n "${key[Insert]}"  ]]  && bindkey  "${key[Insert]}"  overwrite-mode
[[ -n "${key[Delete]}"  ]]  && bindkey  "${key[Delete]}"  delete-char
bindkey "^[[3~"  delete-char
[[ -n "${key[Up]}"      ]]  && bindkey  "${key[Up]}"      up-line-or-history
[[ -n "${key[Down]}"    ]]  && bindkey  "${key[Down]}"    down-line-or-history
[[ -n "${key[Left]}"    ]]  && bindkey  "${key[Left]}"    backward-char
[[ -n "${key[Right]}"   ]]  && bindkey  "${key[Right]}"   forward-char
bindkey "^[[1;5C" forward-word
bindkey "^[[1;5C" emacs-forward-word
bindkey "^[[1;5D" backward-word
bindkey "^[[1;5D" emacs-backward-word
bindkey "^[[1;5C" forward-word
bindkey "^[[1;5D" backward-word
bindkey "^[[Z" reverse-menu-complete # Shift+Tab
bindkey "^[[3;5~" kill-word            # Ctrl+Delete
bindkey '^R' history-incremental-search-backward
bindkey '^S' history-incremental-search-forward
bindkey '^P' history-search-backward
bindkey '^N' history-search-forward

# Fix de ^M bug when typing "enter" sometimes
stty icrnl

# Source local options if any
if [ -f ~/.zshrc.local ]
    then source ~/.zshrc.local
fi
